AC_INIT([Twitux], [0.66], [http://sourceforge.net/tracker/?func=add&group_id=198704&atid=966542], [twitux])
AC_PREREQ(2.59)
AC_COPYRIGHT([Copyright (C) 2007-2008 Daniel Morales])

AC_CONFIG_SRCDIR([src/twitux-main.c])
AC_CONFIG_HEADERS(config.h)
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE([1.9 no-dist-gzip dist-bzip2])

AM_MAINTAINER_MODE

AM_PROG_LIBTOOL
AM_PATH_GLIB_2_0

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

GNOME_DOC_INIT
IT_PROG_INTLTOOL([0.35.0])

GNOME_COMPILE_WARNINGS([maximum])
GNOME_CXX_WARNINGS
GNOME_DEBUG_CHECK
GNOME_MAINTAINER_MODE_DEFINES

dnl -----------------------------------------------------------
dnl
dnl Library Dependencies, uses pkg-config to detect correct version, etc
dnl
dnl -----------------------------------------------------------

LIBXML_REQUIRED=2.6.16
GLIB_REQUIRED=2.15.0
GTK_REQUIRED=2.14.0
GCONF_REQUIRED=1.2.0
LIBGNOME_REQUIRED=2.0.0
LIBGIO_REQUIRED=2.15.5
DBUS_REQUIRED=0.61

dnl -----------------------------------------------------------
dnl ISO codes, used for aspell support
dnl -----------------------------------------------------------
AC_MSG_CHECKING([whether iso-codes exists and has iso-639 domain])
if $PKG_CONFIG --variable=domains iso-codes | grep -q 639 ; then
   AC_MSG_RESULT([yes])
   iso_codes_prefix=`$PKG_CONFIG --variable=prefix iso-codes`
   iso_codes_pkgconfig=iso-codes
   have_iso_codes=yes
else
   AC_MSG_RESULT([no])
   iso_codes_prefix=
   iso_codes_pkgconfig=
   have_iso_codes=no
fi

AC_DEFINE_UNQUOTED([ISO_CODES_PREFIX],["$iso_codes_prefix"],[ISO codes prefix])

dnl -----------------------------------------------------------
dnl D-BUS
dnl -----------------------------------------------------------
AC_ARG_ENABLE(dbus,
              AS_HELP_STRING([--enable-dbus=@<:@no/yes/auto@:>@],
                             [compile with D-Bus support]), ,
              enable_dbus=auto)

if test "x$enable_dbus" != "xno"; then
   dbus_pkgconfig_tmp="dbus-1 >= $DBUS_REQUIRED dbus-glib-1"
   PKG_CHECK_MODULES(DBUS, $dbus_pkgconfig_tmp, have_dbus=yes, have_dbus=no)
   if test x$have_dbus = xyes; then
      AC_DEFINE(HAVE_DBUS, 1, [D-Bus support])
      dbus_pkgconfig=$dbus_pkgconfig_tmp
   fi
else
   have_dbus=no
   dbus_pkgconfig=
fi

if test "x$enable_dbus" = "xyes"; then
   if test "x$have_dbus" != "xyes"; then
      AC_MSG_ERROR([Couldn't find D-Bus.])
   fi
fi

AM_CONDITIONAL(HAVE_DBUS, test x$have_dbus = xyes)

dnl -----------------------------------------------------------
dnl GNOME Keyring
dnl -----------------------------------------------------------
AC_ARG_ENABLE(gnome_keyring,
	      AS_HELP_STRING([--enable-gnome-keyring=@<:@no/yes/auto@:>@],
		             [compile with Gnome Keyring support]), ,
              enable_gnome_keyring=auto)

if test "x$enable_gnome_keyring" != "xno"; then
	gnome_keyring_pkgconfig_tmp="gnome-keyring-1"
	PKG_CHECK_MODULES(GNOME_KEYRING, $gnome_keyring_pkgconfig_tmp, have_gnome_keyring=yes, have_gnome_keyring=no)
	if test x$have_gnome_keyring = xyes; then
		AC_DEFINE(HAVE_GNOME_KEYRING, 1, [gnome keyring support])
		gnome_keyring_pkgconfig=$gnome_keyring_pkgconfig_tmp
	fi
else
	have_gnome_keyring=no
	gnome_keyring_pkgconfig=
fi

if test "x$enable_gnome_keyring" = "xyes"; then
	if test "x$have_gnome_keyring" != "xyes"; then
		AC_MSG_ERROR([Couldn't find GNOME Keyring.])
	fi
fi

AM_CONDITIONAL(HAVE_GNOME_KEYRING, test x$have_gnome_keyring = xyes)

dnl -----------------------------------------------------------
dnl Pkg-Config dependency checks
dnl -----------------------------------------------------------
PKG_CHECK_MODULES(LIBTWITUX,
[
	libxml-2.0 >= $LIBXML_REQUIRED
	glib-2.0 >= $GLIB_REQUIRED
	gtk+-2.0 >= $GTK_REQUIRED
	gobject-2.0
	gconf-2.0 >= $GCONF_REQUIRED
	$gnome_keyring_pkgconfig
])

AC_SUBST(LIBTWITUX_CFLAGS)
AC_SUBST(LIBTWITUX_LIBS)


PKG_CHECK_MODULES(TWITUX,
[
	libsexy
	gtk+-2.0 >= $GTK_REQUIRED
	glib-2.0 >= $GLIB_REQUIRED
	gio-2.0 >= $LIBGIO_REQUIRED
	libsoup-2.4
	libnotify
	$iso_codes_pkgconfig
	$dbus_pkgconfig
])
AC_SUBST(TWITUX_CFLAGS)
AC_SUBST(TWITUX_LIBS)

dnl -----------------------------------------------------------
dnl ASpell
dnl -----------------------------------------------------------
AC_ARG_ENABLE(aspell,
              AS_HELP_STRING([--enable-aspell=@<:@no/yes/auto@:>@],
                             [compile with aspell support]), ,
                             enable_aspell=auto)

if test "x$enable_aspell" = "xyes" -a "x$have_iso_codes" != "xyes"; then
   AC_MSG_ERROR([You must have iso-codes with the iso-639 domain to use aspell.])
fi

if test "x$enable_aspell" != "xno" -a "x$have_iso_codes" = "xyes"; then
   AC_CHECK_LIB(aspell, aspell_speller_check,have_aspell=yes,have_aspell=no,)

   if test "x$have_aspell" = "xyes"; then
      AC_DEFINE(HAVE_ASPELL, 1, [Define if we have aspell])
      TWITUX_LIBS="$TWITUX_LIBS -laspell"
   else
      have_aspell=no
   fi
else
   have_aspell=no
fi

if test "x$enable_aspell" = "xyes" -a "x$have_aspell" != "xyes"; then
   AC_MSG_ERROR([Couldn't find aspell.])
fi

dnl -----------------------------------------------------------
dnl Language Support
dnl -----------------------------------------------------------
GETTEXT_PACKAGE=twitux
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[Gettext package name])

AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
data/Makefile
data/twitux.desktop.in
help/Makefile
src/Makefile
libtwitux/Makefile
po/Makefile.in
])

echo
echo "Prefix:        $prefix"
echo "ASpell:        $have_aspell"
echo "DBUS:          $have_dbus"
echo "GNOME Keyring: $have_gnome_keyring"
echo
